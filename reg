import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score

# Load the diabetes dataset
diabetes = datasets.load_diabetes()

# Use only one feature
diabetes_X = diabetes.data[:, np.newaxis, 2]

# Split the data
X_train, X_test = diabetes_X[:-20], diabetes_X[-20:]
y_train, y_test = diabetes.target[:-20], diabetes.target[-20:]

# Create and train the linear regression model
regr = linear_model.LinearRegression().fit(X_train, y_train)

# Make predictions
y_pred = regr.predict(X_test)

# Print coefficients, mean squared error, and coefficient of determination
print("Coefficients:", regr.coef_)
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("Coefficient of Determination:", r2_score(y_test, y_pred))

# Plot actual vs predicted values
plt.scatter(X_test, y_test, color="black")
plt.plot(X_test, y_pred, color="blue", linewidth=3)
plt.xlabel("Age")
plt.ylabel("Diabetes Progression")
plt.title("Linear Regression on Diabetes Dataset")
plt.show()
